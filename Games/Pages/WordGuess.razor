@page "/wordguess"

@using System.Collections.Generic;
@using Games.WordGuess
@using Games.Services

@code {
    [Inject]
    public IWordService WordService { get; set; }
    private Wordle game = new Wordle();
    public string msg = "";
    int clicks = 0;
    List<string> guesses = new List<string>();
    bool update = false;

    protected override async Task OnInitializedAsync()
    {        
        await Setup();
    }

    public async Task Setup()
    {
        var words = await WordService.GetWords();
        msg = "";
        clicks = 0;
        guesses = new List<string>();
        update = false;

        game = new Wordle(words);
    }  

    public void Guess()
    {
        if (clicks < 5) return;

        msg = "";
        try
        {
            game.Guess();            
        }
        catch(Exception ex)
        {
            msg = ex.Message;
        }

        clicks = 0;
        update = true;
    }

    public string GetColor(Letter letter)
    {
        string retVal = "white";

        if(string.IsNullOrEmpty(letter.Text))
            return retVal;

        if(letter.Location == Location.Yes)
            retVal = "green";

        if(letter.Location == Location.No)
            retVal = "gray";

        if(letter.Location == Location.Contains)
            retVal = "orange";

        return retVal;
    }

    public string GetForeColor(Letter letter)
    {
        string retVal = "black";

        if (GetColor(letter) != "white")
            retVal = "white";

        return retVal;
    }

    public string GetColor(int index, string letter, string color)
    {
        string retVal = color;

        var currentRound = game.Rounds[index];
        var test = currentRound.Letters.FirstOrDefault(o => o.Text == letter);
        if (test != null)
        {
            if (test.Location == Location.Yes)
                retVal = "green";
            if (test.Location == Location.Contains)
                retVal = "orange";
            if (test.Location == Location.No)
                retVal = "gray";
        }
        return retVal;
    }

    public string SetKeyColor(string letter)
    {
        string retVal = "white";

        if (game.Turn < 1)
        {
            return retVal;
        }

        for(int i = 0; i < game.Turn-1; i++)
        {
            retVal = GetColor(i, letter, retVal);
        }

        if (update)
        {
            retVal = GetColor(game.Turn - 1, letter, retVal);            
        }

        return retVal;
    }

    public string SetForeColor(string letter)
    {
        string retVal = "black";

        if (SetKeyColor(letter) != "white")
            retVal = "white";

        return retVal;
    }

    public string Finished()
    {
        return game.Finished ? game.Word : string.Empty;
    }

    public void SetLetter(string letter)
    {
        update = true;

        if (clicks == 5) return;

        guesses.Add(letter);
        game.SetLetter(clicks, letter);

        if (clicks < 5)
            clicks++;
    }

    public void DeleteLetter()
    {
        if (clicks == 0) return;

        game.DeleteLetter(clicks-1);

        if(guesses.Any())
            guesses.RemoveAt(clicks-1);

        clicks--;

        update = true;
    }
}

<div class="gameContainer">

    <div id="stack">
            @for(int i = 0; i < game.Rounds.Count; i++)
            {
                @for(int j = 0; j < game.Rounds[i].Letters.Length; j++)
                {
                    <label class="form-control rounded" style="background-color: @GetColor(game.Rounds[i].Letters[j]); color: @GetForeColor(game.Rounds[i].Letters[j]);">@game.Rounds[i].Letters[j].Text</label>
                }
            }
    </div>
            
    <div class="keyboard keyboard1">                
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("Q"); color: @SetForeColor("Q")' @onclick='(() => SetLetter("Q"))' disabled="@game.Finished">Q</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("W"); color: @SetForeColor("W")' @onclick='(() => SetLetter("W"))' disabled="@game.Finished">W</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("E"); color: @SetForeColor("E")' @onclick='(() => SetLetter("E"))' disabled="@game.Finished">E</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("R"); color: @SetForeColor("R")' @onclick='(() => SetLetter("R"))' disabled="@game.Finished">R</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("T"); color: @SetForeColor("T")' @onclick='(() => SetLetter("T"))' disabled="@game.Finished">T</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("Y"); color: @SetForeColor("Y")' @onclick='(() => SetLetter("Y"))' disabled="@game.Finished">Y</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("U"); color: @SetForeColor("U")' @onclick='(() => SetLetter("U"))' disabled="@game.Finished">U</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("I"); color: @SetForeColor("I")' @onclick='(() => SetLetter("I"))' disabled="@game.Finished">I</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("O"); color: @SetForeColor("O")' @onclick='(() => SetLetter("O"))' disabled="@game.Finished">O</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("P"); color: @SetForeColor("P")' @onclick='(() => SetLetter("P"))' disabled="@game.Finished">P</button>
    </div>

    <div class="keyboard keyboard2">
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("A"); color: @SetForeColor("A")' @onclick='(() => SetLetter("A"))' disabled="@game.Finished">A</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("S"); color: @SetForeColor("S")' @onclick='(() => SetLetter("S"))' disabled="@game.Finished">S</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("D"); color: @SetForeColor("D")' @onclick='(() => SetLetter("D"))' disabled="@game.Finished">D</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("F"); color: @SetForeColor("F")' @onclick='(() => SetLetter("F"))' disabled="@game.Finished">F</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("G"); color: @SetForeColor("G")' @onclick='(() => SetLetter("G"))' disabled="@game.Finished">G</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("H"); color: @SetForeColor("H")' @onclick='(() => SetLetter("H"))' disabled="@game.Finished">H</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("J"); color: @SetForeColor("J")' @onclick='(() => SetLetter("J"))' disabled="@game.Finished">J</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("K"); color: @SetForeColor("K")' @onclick='(() => SetLetter("K"))' disabled="@game.Finished">K</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("L"); color: @SetForeColor("L")' @onclick='(() => SetLetter("L"))' disabled="@game.Finished">L</button>
    </div>

    <div class="keyboard keyboard3">
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("Z"); color: @SetForeColor("Z")' @onclick='(() => SetLetter("Z"))' disabled="@game.Finished">Z</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("X"); color: @SetForeColor("X")' @onclick='(() => SetLetter("X"))' disabled="@game.Finished">X</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("C"); color: @SetForeColor("C")' @onclick='(() => SetLetter("C"))' disabled="@game.Finished">C</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("V"); color: @SetForeColor("V")' @onclick='(() => SetLetter("V"))' disabled="@game.Finished">V</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("B"); color: @SetForeColor("B")' @onclick='(() => SetLetter("B"))' disabled="@game.Finished">B</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("N"); color: @SetForeColor("N")' @onclick='(() => SetLetter("N"))' disabled="@game.Finished">N</button>
        <button class="btn btn-outline-secondary rounded" style='background-color: @SetKeyColor("M"); color: @SetForeColor("M")' @onclick='(() => SetLetter("M"))' disabled="@game.Finished">M</button>
        <button class="btn btn-outline-secondary rounded" @onclick="DeleteLetter" disabled="@game.Finished">&#9003;</button>
    </div>

    <div class="controls">
        <button class="btn btn-outline-primary rounded" @onclick="@Guess" disabled="@game.Finished">Guess</button>
        <button class="btn btn-outline-secondary rounded" @onclick="@Setup">New</button>
        <label>@(Finished())</label>
        <label>@msg</label>
    </div>

</div>

<style>
    .gameContainer {
        display: grid;
        grid-template-columns: auto;
        justify-items: center;
        align-items: center;
    }
    #stack label { 
        width: 40px; 
        height: 40px;
        font-weight: bold; 
    }
    div.keyboard button { 
        font-weight: bold;
        font-size: small; 
        padding: 8px; 
        margin-top: 5px; 
        width: 30px;
    }

    #stack {
        display: grid;
        grid-template-columns: repeat(5, 40px);
        grid-gap: 2px;
        padding: 2px;
    }

    .keyboard1 {
        display: grid;
        grid-template-columns: repeat(10, 30px);
        grid-gap: 3px;
        padding: 3px;
    }

    .keyboard2 {
        display: grid;
        grid-template-columns: repeat(9, 30px);
        grid-gap: 3px;
        padding: 3px;
    }

    .keyboard3 {
        display: grid;
        grid-template-columns: repeat(8, 30px);
        grid-gap: 3px;
        padding: 3px;
    }

    .controls {
        display: grid;
        grid-template-columns: 50px 50px auto auto;
        grid-gap: 5px;
        padding: 5px;
    }

    div.controls button {
        margin-top: 5px; 
        font-size: x-small;
    }

    div.controls label {
        margin-top: 5px; 
        font-weight: bold;
        vertical-align: bottom;
    }
</style>